package main

import (
	"fmt"
	"os"
	"path/filepath"

	"github.com/spf13/cobra"
)

var ScaffoldCmd = &cobra.Command{
	Use:   "new <name>",
	Short: "Create a new modular package with all the trimmings",
	Args:  cobra.ExactArgs(1),
	Run: func(cmd *cobra.Command, args []string) {
		name := args[0]
		scaffoldNewPackage(name)
	},
}

func scaffoldNewPackage(name string) {
	base := filepath.Join("packages", name)
	src := filepath.Join(base, "src")
	examples := filepath.Join(base, "examples")
	must(os.MkdirAll(src, 0755))
	must(os.MkdirAll(examples, 0755))
	writeFile(filepath.Join(base, "aether.toml"),
		"name = \""+name+"\"\nversion = \"0.1.0\"\ndescription = \"\"\ndependencies = []\n")
	writeFile(filepath.Join(src, "main.ae"),
		"print(\"Hello from "+name+"!\")\n")
	writeFile(filepath.Join(base, "README.md"),
		"# "+name+"\n\nModular package for "+name+".\nGenerated by the Aether CLI wizard ü¶Ñüçï\n\n## Usage\n\nSee examples/basic.ae\n")
	writeFile(filepath.Join(examples, "basic.ae"),
		"import "+name+"/main\n\nmain()\n")
	fmt.Println("ü¶Ñ Created new package '", name, "' in ", base)
	fmt.Println("üçï All files and folders are ready!")
	fmt.Println("‚ú® Go forth and code, champion of modularity!")
}

func writeFile(path, content string) {
	f, err := os.Create(path)
	must(err)
	defer f.Close()
	_, err = f.WriteString(content)
	must(err)
}
